{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rawcode/Desktop/Git/React/Resort/src/context.js\";\nimport React, { Component } from \"react\";\nimport AppData from \"./data\";\nconst RoomContext = /*#__PURE__*/React.createContext();\nexport default class RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true //\n\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n  }\n\n  componentDidMount() {\n    let rooms = this.formatData(AppData);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false\n    });\n    console.log(rooms);\n    console.log(featuredRooms);\n  }\n\n  formatData(AppData) {\n    let tempAppData = AppData.map(AppData => {\n      let id = AppData.sys.id;\n      let images = AppData.fields.images.map(images => images.fields.file.url);\n      let rooms = { ...AppData.fields,\n        images,\n        id\n      };\n      return rooms;\n    });\n    return tempAppData;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(RoomContext.Provider, {\n        value: { ...this.state\n        },\n        children: this.props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nconst RoomConsumer = RoomContext.Consumer;\nexport { RoomProvider, RoomContext, RoomConsumer };","map":{"version":3,"sources":["/Users/rawcode/Desktop/Git/React/Resort/src/context.js"],"names":["React","Component","AppData","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","getRoom","slug","tempRooms","room","find","componentDidMount","formatData","filter","featured","setState","console","log","tempAppData","map","id","sys","images","fields","file","url","render","props","children","RoomConsumer","Consumer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,QAApB;AAGA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,EAApB;AAEA,eAAe,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAClDK,KADkD,GAC1C;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,aAAa,EAAE,EAHT;AAINC,MAAAA,OAAO,EAAE,IAJH,CAON;;AAPM,KAD0C;;AAAA,SAsChDC,OAtCgD,GAsCtCC,IAAI,IAAI;AACd,UAAIC,SAAS,GAAG,CAAC,GAAG,KAAKP,KAAL,CAAWC,KAAf,CAAhB;AACA,YAAMO,IAAI,GAAGD,SAAS,CAACE,IAAV,CAAeD,IAAI,IAAIA,IAAI,CAACF,IAAL,KAAcA,IAArC,CAAb;AACA,aAAOE,IAAP;AACD,KA1C6C;AAAA;;AAYhDE,EAAAA,iBAAiB,GAAE;AACf,QAAIT,KAAK,GAAG,KAAKU,UAAL,CAAgBf,OAAhB,CAAZ;AACA,QAAIO,aAAa,GAAIF,KAAK,CAACW,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACK,QAAL,KAAkB,IAAvC,CAArB;AACA,SAAKC,QAAL,CAAc;AACVb,MAAAA,KADU;AAEVE,MAAAA,aAFU;AAGVD,MAAAA,WAAW,EAAED,KAHH;AAIVG,MAAAA,OAAO,EAAE;AAJC,KAAd;AAMAW,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYb,aAAZ;AACH;;AAEDQ,EAAAA,UAAU,CAACf,OAAD,EAAS;AACf,QAAIqB,WAAW,GAAGrB,OAAO,CAACsB,GAAR,CAAYtB,OAAO,IAAG;AACpC,UAAIuB,EAAE,GAAGvB,OAAO,CAACwB,GAAR,CAAYD,EAArB;AACA,UAAIE,MAAM,GAAGzB,OAAO,CAAC0B,MAAR,CAAeD,MAAf,CAAsBH,GAAtB,CAA0BG,MAAM,IAC7CA,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBC,GADN,CAAb;AAGA,UAAIvB,KAAK,GAAG,EAAC,GAAGL,OAAO,CAAC0B,MAAZ;AAAoBD,QAAAA,MAApB;AAA4BF,QAAAA;AAA5B,OAAZ;AACA,aAAOlB,KAAP;AAEH,KARiB,CAAlB;AASA,WAAOgB,WAAP;AACH;;AAQDQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,WAAD,CAAa,QAAb;AAAsB,QAAA,KAAK,EAAE,EAAE,GAAG,KAAKzB;AAAV,SAA7B;AAAA,kBACK,KAAK0B,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AApD+C;AAuDpD,MAAMC,YAAY,GAAG/B,WAAW,CAACgC,QAAjC;AAEA,SAAO9B,YAAP,EAAoBF,WAApB,EAAgC+B,YAAhC","sourcesContent":["import React, { Component } from \"react\";\nimport AppData from \"./data\";\n\n\nconst RoomContext = React.createContext();\n\nexport default class RoomProvider extends Component {\n  state = {\n    rooms: [],\n    sortedRooms: [],\n    featuredRooms: [],\n    loading: true,\n     \n\n    //\n    };\n\n\n    componentDidMount(){\n        let rooms = this.formatData(AppData);\n        let featuredRooms =  rooms.filter(room => room.featured === true);\n        this.setState({\n            rooms,\n            featuredRooms,\n            sortedRooms: rooms,\n            loading: false\n        });\n        console.log(rooms);\n        console.log(featuredRooms);\n    }\n\n    formatData(AppData){\n        let tempAppData = AppData.map(AppData =>{\n            let id = AppData.sys.id;\n            let images = AppData.fields.images.map(images=>\n            images.fields.file.url);\n\n            let rooms = {...AppData.fields, images, id};\n            return rooms;\n\n        });\n        return tempAppData;\n    }\n\n    getRoom = slug => {\n        let tempRooms = [...this.state.rooms];\n        const room = tempRooms.find(room => room.slug === slug);\n        return room;\n      };\n\n    render() {\n        return (\n            <div>\n                <RoomContext.Provider value={{ ...this.state }}>\n                    {this.props.children}\n                </RoomContext.Provider>\n            </div>\n        );\n    }\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport{RoomProvider,RoomContext,RoomConsumer};"]},"metadata":{},"sourceType":"module"}